@model List<JobRequest>

<link rel="stylesheet" href="~/css/Myjobs.css">
<!-- إضافة Font Awesome للأيقونات -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<body>
    <div class="container">
        <header>
            <h1>My Jobs</h1>
            <div class="buttons-container">
                <form id="logoutForm" method="post" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    @Html.AntiForgeryToken()
                    <button id="logout" type="submit" class="btn btn-danger rounded-pill fw-semibold">Logout</button>
                </form>
            </div>
        </header>

        <div class="jobs-grid">
            @foreach (var job in Model.OrderByDescending(j => j.Id))
            {
                <div class="job-card">
                    <div class="job-header">
                        <h2>@job.JobTitle</h2>
                        <form asp-controller="JobRequest" asp-action="DeleteConfirmed" asp-route-id="@job.Id" method="post"
                              class="delete-form"
                              onsubmit="return confirm('Are you sure you want to delete this job?');">
                            <button type="submit" class="delete-btn" aria-label="Delete job">×</button>
                        </form>
                    </div>
                    <p class="job-description">@job.Description</p>
                    <div class="job-details">
                        <div class="detail-group">
                            <span class="label">Required Skills:</span>
                            <div class="skills">
                                <span class="skill">@job.RequiredSkills</span>
                            </div>
                        </div>
                        <div class="detail-group">
                            <span class="label">Difficulty:</span>
                            <span class="value">@job.DifficultyLevel</span>
                        </div>
                        <div class="detail-group">
                            <span class="label">Questions:</span>
                            <span class="value">@job.NumberOfQuestions</span>
                        </div>
                        <div class="detail-group">
                            <span class="label">Exam Link:</span>
                            <span class="value">
                                @if (string.IsNullOrEmpty(job.ExamLink))
                                {
                                    <span>Not Provided</span>
                                }
                                else
                                {
                                    <a href="@job.ExamLink" target="_blank" class="exam-link">@job.ExamLink</a>
                                    <button type="button" class="copy-btn" onclick="copyToClipboard(this, '@job.ExamLink')">
                                        <i class="fas fa-copy"></i>
                                    </button>
                                }
                            </span>
                        </div>
                    </div>
                    <a asp-controller="JobRequest" asp-action="Details" asp-route-id="@job.Id" class="view-details">View Details</a>
                </div>
            }
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Modal functionality
            const createJobBtn = document.getElementById('createJobBtn');
            const createJobModal = document.getElementById('createJobModal');
            const modalClose = document.querySelector('.modal-close');
            const cancelBtn = document.getElementById('cancelBtn');

            function closeModal() {
                createJobModal.classList.remove('active');
            }

            if (createJobBtn) {
                createJobBtn.addEventListener('click', () => {
                    createJobModal.classList.add('active');
                });
            }

            if (modalClose) modalClose.addEventListener('click', closeModal);
            if (cancelBtn) cancelBtn.addEventListener('click', closeModal);

            // Close modal when clicking outside
            window.addEventListener('click', (e) => {
                if (e.target === createJobModal) {
                    closeModal();
                }
            });

            // Number input controls
            const numberInput = document.getElementById('numberOfQuestions');
            const numberControls = document.querySelectorAll('.number-control-btn');

            numberControls.forEach(button => {
                button.addEventListener('click', () => {
                    const action = button.dataset.action;
                    const currentValue = parseInt(numberInput.value) || 0;

                    if (action === 'increment' && currentValue < parseInt(numberInput.max)) {
                        numberInput.value = currentValue + 1;
                    } else if (action === 'decrement' && currentValue > parseInt(numberInput.min)) {
                        numberInput.value = currentValue - 1;
                    }

                    numberInput.dispatchEvent(new Event('change'));
                });
            });

            // Form submission
            const createJobForm = document.getElementById('createJobForm');
            if (createJobForm) {
                createJobForm.addEventListener('submit', (e) => {
                    e.preventDefault();
                    alert('Job created successfully!');
                    closeModal();
                });
            }
        });

        // دالة نسخ الرابط وتغيير الأيقونة مؤقتًا
        function copyToClipboard(button, text) {
            navigator.clipboard.writeText(text).then(() => {
                // تغيير الأيقونة لعلامة صح
                const icon = button.querySelector('i');
                icon.classList.remove('fa-copy');
                icon.classList.add('fa-check');

                // تغيير اللون للأخضر (اختياري)
                button.style.color = '#28a745';

                // رجوع الأيقونة للنسخ بعد ثانيتين
                setTimeout(() => {
                    icon.classList.remove('fa-check');
                    icon.classList.add('fa-copy');
                    button.style.color = ''; // رجوع اللون للأصلي
                }, 2000); // 2000 مللي ثانية = 2 ثانية
            }).catch(err => {
                console.error('فشل في نسخ الرابط: ', err);
            });
        }
    </script>
</body>