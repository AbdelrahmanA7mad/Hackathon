@model List<JobRequest>


<link rel="stylesheet" href="~/css/Myjobs.css">


<body>
    <div class="container">
        <header>
            <h1>My Jobs</h1>
            <div class="buttons-container">
                <button class="btn btn-primary" id="createJobBtn">+ Add New Job</button>
                <form id="logoutForm" method="post" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    @Html.AntiForgeryToken()
                    <button id="logout" type="submit" class="btn btn-danger rounded-pill fw-semibold">Logout</button>
                </form>
            </div>
        </header>

        <div class="jobs-grid">
            @foreach (var job in Model.OrderByDescending(j => j.Id))
            {
                <div class="job-card">
                    <div class="job-header">
                        <h2>@job.JobTitle</h2>
                        <form asp-controller="JobRequest" asp-action="DeleteConfirmed" asp-route-id="@job.Id" method="post"
                              class="delete-form"
                              onsubmit="return confirm('Are you sure you want to delete this job?');">
                            <button type="submit" class="delete-btn" aria-label="Delete job">×</button>
                        </form>

                    </div>
                    <p class="job-description">@job.Description</p>
                    <div class="job-details">
                        <div class="detail-group">
                            <span class="label">Required Skills:</span>
                            <div class="skills">
                                <span class="skill">@job.RequiredSkills</span>
                            </div>
                        </div>
                        <div class="detail-group">
                            <span class="label">Difficulty:</span>
                            <span class="value">@job.DifficultyLevel</span>
                        </div>
                        <div class="detail-group">
                            <span class="label">Questions:</span>
                            <span class="value">@job.NumberOfQuestions</span>
                        </div>
                    </div>
                    <a asp-controller="JobRequest" asp-action="Details" asp-route-id="@job.Id" class="view-details">View Details</a>
                </div>
            }
        </div>
    </div>

    <!-- Create Job Modal -->
    <div class="modal" id="createJobModal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Create New Job</h2>
                <button class="modal-close">&times;</button>
            </div>
            <form id="createJobForm" asp-controller="JobRequest" asp-action="Create" method="post">
                <div class="form-group">
                    <label for="jobTitle">Job Title</label>
                    <input type="text" id="jobTitle" name="JobTitle" required>
                </div>
                <div class="form-group">
                    <label for="description">Description</label>
                    <textarea id="description" name="Description" rows="4" required></textarea>
                </div>
                <div class="form-group">
                    <label for="requiredSkills">Required Skills</label>
                    <input type="text" id="requiredSkills" name="RequiredSkills" placeholder="Enter comma-separated skills (e.g., JavaScript, React, Node.js)" required>
                </div>
                <div class="form-group">
                    <label for="numberOfQuestions">Number of Questions</label>
                    <input type="number" id="numberOfQuestions" name="NumberOfQuestions" min="1" max="50" step="1" value="1" required>
                    <div class="number-controls">
                        <button type="button" class="number-control-btn" data-action="increment">+</button>
                        <button type="button" class="number-control-btn" data-action="decrement">-</button>
                    </div>
                </div>
                <div class="form-group">
                    <label for="difficultyLevel">Difficulty Level</label>
                    <select id="difficultyLevel" name="DifficultyLevel" required>
                        <option value="">Select difficulty</option>
                        <option value="beginner">Beginner</option>
                        <option value="intermediate">Intermediate</option>
                        <option value="advanced">Advanced</option>
                        <option value="expert">Expert</option>
                    </select>
                </div>
                <div class="form-actions">
                    <button type="button" class="btn btn-secondary" id="cancelBtn">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create Job</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Modal functionality
            const createJobBtn = document.getElementById('createJobBtn');
            const createJobModal = document.getElementById('createJobModal');
            const modalClose = document.querySelector('.modal-close');
            const cancelBtn = document.getElementById('cancelBtn');

            function closeModal() {
                createJobModal.classList.remove('active');
            }

            createJobBtn.addEventListener('click', () => {
                createJobModal.classList.add('active');
            });

            modalClose.addEventListener('click', closeModal);
            cancelBtn.addEventListener('click', closeModal);

            // Close modal when clicking outside
            window.addEventListener('click', (e) => {
                if (e.target === createJobModal) {
                    closeModal();
                }
            });

            // Number input controls
            const numberInput = document.getElementById('numberOfQuestions');
            const numberControls = document.querySelectorAll('.number-control-btn');

            numberControls.forEach(button => {
                button.addEventListener('click', () => {
                    const action = button.dataset.action;
                    const currentValue = parseInt(numberInput.value) || 0;

                    if (action === 'increment' && currentValue < parseInt(numberInput.max)) {
                        numberInput.value = currentValue + 1;
                    } else if (action === 'decrement' && currentValue > parseInt(numberInput.min)) {
                        numberInput.value = currentValue - 1;
                    }

                    numberInput.dispatchEvent(new Event('change'));
                });
            });

            // Form submission
            const createJobForm = document.getElementById('createJobForm');
            createJobForm.addEventListener('submit', (e) => {
                e.preventDefault();
                // Add form submission logic here
                alert('Job created successfully!');
                closeModal();
            });
        });
    </script>
</body>

