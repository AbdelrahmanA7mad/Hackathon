@model CreateJopViewModel
    <title>Job Dashboard</title>
    <link rel="stylesheet" href="~/css/Dashboard.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
<body>
    <div id="app">
        <div class="dashboard">
            <div class="dashboard-header">
                <h1>Job Dashboard</h1>
                <div class="header-actions">
                    <button class="btn btn-primary" id="createJobBtn">+ Add New Job</button>
                    <a asp-controller="JobRequest" asp-action="Index" class="btn btn-secondary">View My Jobs</a>

                    <form id="logoutForm" method="post" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                        @Html.AntiForgeryToken()
                        <button id="logout" type="submit" class="btn btn-danger rounded-pill fw-semibold">Logout</button>
                    </form>
                </div>
            </div>
            <div class="dashboard-grid">
                <div class="stats-container">
                    <div class="stat-card">
                        <h3>Total Jobs</h3>
                        <div class="stat-number">@ViewBag.TotalJobs</div>
                        <p>Across all departments</p>
                    </div>
                    <div class="stat-card">
                        <h3>Total Employees</h3>
                        <div class="stat-number">@ViewBag.TotalEmp</div>
                        <p>Working on projects</p>
                    </div>
                </div>

                <div class="recent-jobs">
                    <h2>Recent Job Openings</h2>
                    <div class="jobs-list">
                        @if (ViewBag.LatestJobs != null)
                        {
                            foreach (var job in ViewBag.LatestJobs)
                            {
                                <div class="activity-item">
                                    <div class="activity-icon">üìù</div>
                                    <div class="activity-details">
                                        <h4>@job.JobTitle</h4>
                                        <p>@job.Description</p>
                                        <span class="activity-time"></span>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <p>No recent job requests found.</p>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Create Job Modal -->
    <div class="modal" id="createJobModal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Create New Job</h2>
                <button class="modal-close">&times;</button>
            </div>
            <form id="createJobForm" asp-controller="Logic" asp-action="NewJob" method="post">
                    <div class="form-group">
                        <label asp-for="JobTitle"></label>
                        <input asp-for="JobTitle" class="form-control" />
                        <span asp-validation-for="JobTitle" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Description"></label>
                    <textarea asp-for="Description"  class="form-control" rows="4" ></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="RequiredSkills"></label>
                        <input asp-for="RequiredSkills" class="form-control"
                               placeholder="Enter comma-separated skills (e.g., C#, .NET, SQL)" />
                        <span asp-validation-for="RequiredSkills" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="NumberOfQuestions"></label>
                        <input asp-for="NumberOfQuestions" type="number"class="form-control"
                               min="1" max="50" step="1" />
                        <span asp-validation-for="NumberOfQuestions" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="DifficultyLevel"></label>
                        <select asp-for="DifficultyLevel" asp-items="Html.GetEnumSelectList<DifficultyLevel>()"
                                class="form-control"></select>
                        <span asp-validation-for="DifficultyLevel" class="text-danger"></span>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Create Job</button>
                    </div>
                </form>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Modal functionality
            const createJobBtn = document.getElementById('createJobBtn');
            const createJobModal = document.getElementById('createJobModal');
            const modalClose = document.querySelector('.modal-close');
            const cancelBtn = document.getElementById('cancelBtn');

            function closeModal() {
                createJobModal.classList.remove('active');
            }

            createJobBtn.addEventListener('click', () => {
                createJobModal.classList.add('active');
            });

            modalClose.addEventListener('click', closeModal);
            cancelBtn.addEventListener('click', closeModal);

            // Close modal when clicking outside
            window.addEventListener('click', (e) => {
                if (e.target === createJobModal) {
                    closeModal();
                }
            });

            // Number input controls
            const numberInput = document.getElementById('numberOfQuestions');
            const numberControls = document.querySelectorAll('.number-control-btn');

            numberControls.forEach(button => {
                button.addEventListener('click', () => {
                    const action = button.dataset.action;
                    const currentValue = parseInt(numberInput.value) || 0;

                    if (action === 'increment' && currentValue < parseInt(numberInput.max)) {
                        numberInput.value = currentValue + 1;
                    } else if (action === 'decrement' && currentValue > parseInt(numberInput.min)) {
                        numberInput.value = currentValue - 1;
                    }

                    numberInput.dispatchEvent(new Event('change'));
                });
            });

            // Form submission
            const createJobForm = document.getElementById('createJobForm');
            createJobForm.addEventListener('submit', (e) => {
                e.preventDefault();
                // Add form submission logic here
                alert('Job created successfully!');
                closeModal();
            });
        });
    </script>
</body>
</html>